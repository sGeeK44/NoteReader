name: Build Apk

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [created]

jobs:
  build:
    runs-on: [ubuntu-latest]
    permissions: write-all
    env:
      node-version: 18
      java-version: 11
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install lib dependencies
        run: npm ci --ignore-scripts

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.java-version }}
          cache: 'gradle'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Install dependencies
        run: npm install

      - name: Check lint
        run: npm run lint

      - name: Run unit tests
        run: npm run test -- --reporters=default --reporters=jest-junit

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: 'Units tests Report'
          path: '**/junit.xml'
          reporter: jest-junit
          max-annotations: 0
          fail-on-error: true

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'keystore/keystore.jks'
          encodedString: ${{ secrets.KEYSTORE }}

      - name: Update package version
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"version": "([0-9.]*)"'
          replacement: '"version": "${{ github.ref_name }}"'
          include: './package.json'

      - name: Update ms center app secret
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '"app_secret": "MS_CENTER_APP_SECRET"'
          replacement: '"app_secret": "${{ secrets.MS_CENTER_APP_SECRET }}"'
          include: './src/assets/appcenter-config.json'

      - name: Update code push key
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: "deploymentKey: 'CODE_PUSH_DEPLOYMENT_KEY',"
          replacement: "deploymentKey: '${{ secrets.CODE_PUSH_DEPLOYMENT_KEY }}',"
          include: './src/ui/screen/SplashScreen.tsx'

      - name: Build Apk
        working-directory: android/
        run: ./gradlew assemblerelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name: Upload Apk
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: android/app/build/outputs/apk/**/app*.apk        

      - name: Get APK version
        id: get-apk-version
        run: |
          echo "apk-version=$(grep -oP "versionName \"\K[^\"]*" android/app/build.gradle)" >> $GITHUB_OUTPUT
          
      - name: Install App center
        run: npm install -g appcenter-cli
      
      - name: App center login
        run: appcenter login --token ${{ secrets.CODE_PUSH_TOKEN }}

      - name: Deploy code push
        run: |
            appcenter codepush release-react -a sGeeK/MusicTheoryTeatcher -d ${{ secrets.CODE_PUSH_DEPLOYMENT_KEY_NAME }} -t ${{ steps.get-apk-version.outputs.apk-version }} || {
              if [[ $? -eq 3 ]] ; then
                echo "Code push deploy skipped."
                exit 0
              fi

              exit $?
            }
